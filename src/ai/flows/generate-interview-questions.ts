// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview Generates customized interview questions for each candidate based on their resume and the job description.
 *
 * - generateInterviewQuestions - A function that handles the interview question generation process.
 * - GenerateInterviewQuestionsInput - The input type for the generateInterviewQuestions function.
 * - GenerateInterviewQuestionsOutput - The return type for the generateInterviewQuestions function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GenerateInterviewQuestionsInputSchema = z.object({
  jobDescription: z.string().describe('The description of the job.'),
  resume: z.string().describe('The resume content as a string.'),
});
export type GenerateInterviewQuestionsInput = z.infer<
  typeof GenerateInterviewQuestionsInputSchema
>;

const GenerateInterviewQuestionsOutputSchema = z.object({
  questions: z
    .array(z.string())
    .describe('A list of customized interview questions.'),
  modelAnswers: z
    .array(z.string())
    .describe('A list of model answers for each question.'),
});
export type GenerateInterviewQuestionsOutput = z.infer<
  typeof GenerateInterviewQuestionsOutputSchema
>;

export async function generateInterviewQuestions(
  input: GenerateInterviewQuestionsInput
): Promise<GenerateInterviewQuestionsOutput> {
  return generateInterviewQuestionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateInterviewQuestionsPrompt',
  input: {
    schema: z.object({
      jobDescription: z.string().describe('The description of the job.'),
      resume: z.string().describe('The resume content as a string.'),
    }),
  },
  output: {
    schema: z.object({
      questions: z
        .array(z.string())
        .describe('A list of customized interview questions.'),
      modelAnswers: z
        .array(z.string())
        .describe('A list of model answers for each question.'),
    }),
  },
  prompt: `You are an expert recruiter. Generate a list of interview questions and model answers based on the job description and resume provided.  The interview questions should be tailored to the specific candidate, and the model answers should be what an ideal candidate would say.

Job Description: {{{jobDescription}}}
Resume: {{{resume}}}

Output the questions and model anwers in separate lists.
`,
});

const generateInterviewQuestionsFlow = ai.defineFlow<
  typeof GenerateInterviewQuestionsInputSchema,
  typeof GenerateInterviewQuestionsOutputSchema
>(
  {
    name: 'generateInterviewQuestionsFlow',
    inputSchema: GenerateInterviewQuestionsInputSchema,
    outputSchema: GenerateInterviewQuestionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
